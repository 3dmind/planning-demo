generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BaseUserModel {
  @@map("BaseUser")
  baseUserId      String        @id
  updatedAt       DateTime      @updatedAt
  createdAt       DateTime
  username        String
  userPassword    String
  userEmail       String        @unique
  isEmailVerified Boolean       @default(false)
  memberModel     MemberModel?
}

model MemberModel {
  @@map("Member")
  memberId           String         @id
  updatedAt          DateTime       @updatedAt
  createdAt          DateTime
  baseUserModel      BaseUserModel  @relation(fields: [memberBaseId], references: [baseUserId])
  memberBaseId       String
  ownTaskModels      TaskModel[]    @relation("OwnTasks")
  assignedTaskModels TaskModel[]    @relation("AssignedTasks")
  commentModels      CommentModel[]
}

model TaskModel {
  @@map("Task")
  taskId        String       @id
  updatedAt     DateTime     @updatedAt
  description   String
  createdAt     DateTime
  tickedOff     Boolean
  tickedOffAt   DateTime?
  resumedAt     DateTime?
  editedAt      DateTime?
  archived      Boolean
  archivedAt    DateTime?
  discarded     Boolean
  discardedAt   DateTime?
  ownerModel    MemberModel  @relation("OwnTasks", fields: [ownerId], references: [memberId])
  ownerId       String
  assigneeModel MemberModel  @relation("AssignedTasks", fields: [assigneeId], references: [memberId])
  assigneeId    String
  commentModels CommentModel[]
}

model CommentModel {
  @@map("Comment")
  commentId   String      @id
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime
  text        String
  memberModel MemberModel @relation(fields: [authorId], references: [memberId])
  authorId    String
  taskModel   TaskModel   @relation(fields: [taskId], references: [taskId])
  taskId      String
}
